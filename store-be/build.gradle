buildscript {
    ext {
        springBootVersion = '2.7.11'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '2.7.11'
}

apply plugin: 'io.spring.dependency-management'
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    mavenLocal()
}

dependencies {
    implementation project(':store-fe')
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.modelmapper:modelmapper:3.1.1'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}


task copyPublicResources(type: Copy) {
    from '../store-fe/dist/store-fe/'
    into 'src/main/resources/static'
}

copyPublicResources.dependsOn(':store-fe:buildApp')
processResources.dependsOn(copyPublicResources)

tasks.named('test') {
    useJUnitPlatform()
}
